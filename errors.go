// Package errata is auto-generated by errata
package errata

import "fmt"

type Error struct {
	Code       string
	Message    string
	Cause      string
	Categories []string
	Labels     map[string]string
	Interfaces interfaces

	inner error
}

type interfaces struct {
	HTTPResponseCode int
	ShellExitCode    int
}

func (e Error) Unwrap() error {
	return e.inner
}

func (e Error) Error() string {
	if w := e.Unwrap(); w != nil {
		return fmt.Sprintf("[code: %s] %s", e.Code, w)
	}

	return e.Code
}

const (
	ErrCodeGenError        = "code_gen_error"
	ErrFileNotFound        = "file_not_found"
	ErrFileNotReadable     = "file_not_readable"
	ErrInvalidDatasource   = "invalid_datasource"
	ErrSyntaxError         = "syntax_error"
	ErrTemplateExecution   = "template_execution"
	ErrTemplateNotFound    = "template_not_found"
	ErrTemplateNotReadable = "template_not_readable"
	ErrTemplateSyntax      = "template_syntax"
)

func NewCodeGenError(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrCodeGenError,
		Message:    "Code generation failed",
		Cause:      "",
		Categories: []string{"codegen"},
		Labels:     map[string]string{},
	}
}

func NewFileNotFound(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrFileNotFound,
		Message:    "YML file is incorrect or inaccessible",
		Cause:      "",
		Categories: []string{"file"},
		Labels:     map[string]string{},
	}
}

func NewFileNotReadable(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrFileNotReadable,
		Message:    "YML file is unreadable",
		Cause:      "",
		Categories: []string{"file"},
		Labels: map[string]string{
			"unrecoverable": "false",
			"recoverable":   "true",
		},
	}
}

func NewInvalidDatasource(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrInvalidDatasource,
		Message:    "Configured datasource is invalid",
		Cause:      "",
		Categories: []string{"init"},
		Labels:     map[string]string{},
	}
}

func NewSyntaxError(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrSyntaxError,
		Message:    "YML file is malformed",
		Cause:      "",
		Categories: []string{"parsing"},
		Labels:     map[string]string{},
	}
}

func NewTemplateExecution(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrTemplateExecution,
		Message:    "Error in template execution",
		Cause:      "Possible use of missing or renamed field",
		Categories: []string{"codegen"},
		Labels:     map[string]string{},
	}
}

func NewTemplateNotFound(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrTemplateNotFound,
		Message:    "Template path is incorrect or inaccessible",
		Cause:      "",
		Categories: []string{"file"},
		Labels:     map[string]string{},
	}
}

func NewTemplateNotReadable(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrTemplateNotReadable,
		Message:    "Template path is unreadable",
		Cause:      "",
		Categories: []string{"file"},
		Labels:     map[string]string{},
	}
}

func NewTemplateSyntax(inner error) Error {
	return Error{
		inner:      inner,
		Code:       ErrTemplateSyntax,
		Message:    "Syntax error in template",
		Cause:      "",
		Categories: []string{"codegen"},
		Labels:     map[string]string{},
	}
}
